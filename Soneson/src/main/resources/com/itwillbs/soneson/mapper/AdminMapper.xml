<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.itwillbs.soneson.mapper.AdminMapper">
	
	<!-- 관리자 메인 -->
	
	<!-- 가입 회원 수 조회 -->
	<select id="countJoinUser" resultType="int">
		SELECT COUNT(user_idx)
		FROM user
		WHERE user_status = '가입';
	</select>

	<!-- 탈퇴 회원 수 조회 -->
	<select id="countDeleteUser" resultType="int">
		SELECT COUNT(user_idx)
		FROM user
		WHERE user_status = '탈퇴';
	</select>


	<!-- 파이 차트  -->
	<select id="selectMyPieChart" resultType="map">
		SELECT category AS cate, COUNT(category) AS cateCount
		FROM project
		GROUP BY category
		ORDER BY cateCount DESC
	</select>

	<!-- 바 차트 -->
	<select id="selectMyBarChart" resultType="map">
		SELECT REPLACE(ifnull(format(sum(cost) , 0), 0), ',' ,'') AS now_amount, DATE_FORMAT(fund_date, '%Y-%m-%d') AS fund_date_a  
		FROM fund 
		WHERE fund_date BETWEEN DATE_ADD(now(), INTERVAL -1 WEEK) AND now()
		GROUP BY fund_date_a
	</select>

    <!-- 마이페이지 달성률  -->
   	<select id="selectProjectMyList" resultType="map">
		SELECT
			p.project_code
			, max(p.title) AS title
			, max(p.subtitle) AS subtitle
			, max(p.category) AS category
			, max(p.creator) AS creator
			, max(p.img_main) AS img_main
			, max(p.start_date) AS start_date
			, max(p.end_date) AS end_date
			, ifnull(format(sum(cost) , 0), 0) AS now_amount
			, ifnull(max(goal_amount), 0) AS goal_amount
			, ifnull(sum(cost) / max(goal_amount), 0) AS ratio
			, ifnull(TRUNCATE(sum(cost) / max(goal_amount) * 100, 0), 0) AS goal_rate
			, CASE count(p.project_code) WHEN 1 THEN 0 
										 ELSE count(p.project_code)
										 END AS donor
		FROM project p
		LEFT JOIN fund f
		ON p.project_code = f.project_code
		GROUP BY p.project_code
		ORDER BY end_date DESC
		LIMIT 5
	</select>


    <!-- 주간 펀딩 금액 조회  -->
   	<select id="costAmount" resultType="map">
		SELECT SUM(cost) AS sum_cost 
		FROM fund
		WHERE fund_date BETWEEN DATE_ADD(NOW(),INTERVAL -1 WEEK) AND NOW()
	</select>

    <!-- 진행중인 프로젝트 수 조회  -->
   	<select id="projectCount" resultType="map">
   	<![CDATA[
		SELECT count(*) AS project_count
		FROM 
			(SELECT
				date(p.start_date) AS start_date
				, date(p.end_date) AS end_date
			FROM project p
			WHERE start_date <= now() AND end_date >= now()) AS A
		]]>
	</select>





	<!-- 회원 정보 관리 -->
	<update id="updateUserAuthorize">
		<selectKey keyProperty="user_is_admin" resultType="string" order="BEFORE">
			SELECT
				CASE
					WHEN user_is_admin = 'Y' THEN 'N'
					WHEN user_is_admin = 'N' THEN 'Y'
				END
			FROM user
			WHERE user_idx = #{user_idx}
		</selectKey>
		UPDATE user
		SET user_is_admin = #{user_is_admin}
		WHERE user_idx = #{user_idx}
	</update>
	<!-- 회원 정보 관리 끝 -->
	
    <!-- 게시판 -->
    <insert id="insertEvent">
    	INSERT INTO event
    	VALUES (
    		null
			, #{event_title}
			, #{event_content}
			, now()
			, #{event_startDt}
			, #{event_endDt}
			, #{event_poster}
			, #{event_thumbnail}
			, #{event_category}
    	)
    </insert>
    
    <select id="selectEvent" resultType="Event">
    	SELECT
    		e.event_idx
			, e.event_title
			, e.event_content
			, e.event_writeDate
			, e.event_startDt
			, e.event_endDt
			, e.event_poster
			, e.event_thumbnail
			, c.eventCate_Subject
    	FROM
    		event e JOIN eventCate c
			ON e.event_category = c.eventCate_idx
    	<if test="event_idx != null and !event_idx.equals('')">
		WHERE event_idx = #{event_idx}
		</if>
    </select>
    
    <update id="updateEvent">
    	UPDATE event
    	SET
			event_title = #{event_title}
			, event_content = #{event_content}
			, event_writeDate = #{event_writeDate}
			, event_startDt = #{event_startDt}
			, event_endDt = #{event_endDt}
			, event_poster = #{event_poster}
			, event_thumbnail = #{event_thumbnail}
			, event_category = #{event_category}
		WHERE event_idx = #{event_idx}
    </update>
    
    <delete id="deleteEvent">
    	DELETE FROM event
    	WHERE event_idx = #{event_idx};
    </delete>
    
    
    <!-- 게시판 카테고리 -->
    <insert id="insertEventCategory">
		INSERT INTO eventCate
		VALUES (
			null
			, #{eventCate_subject}
		)
	</insert>

	<select id="selectEventCategory" resultType="EventCate">
          SELECT 
          	eventCate_idx 
          	, eventCate_subject
          FROM eventCate
    </select>
    
    <delete id="deleteEventCategory">
    	DELETE FROM eventCate
    	WHERE eventCate_subject = #{eventCate_subject}
    </delete>
    <!-- 이벤트 카테고리 끝 -->
    
    
    
    <!-- 자주 묻는 질문 -->
  	<insert id="insertQna">
		INSERT INTO qna
		VALUES (
			null
			, #{qna_title}
			, #{qna_content}
			, #{qna_category}
		)
	</insert>

	<select id="selectQna" resultType="Qna">
		SELECT
			q.qna_idx
			, q.qna_title
			, q.qna_content
			, q.qna_category
			, c.qnaCate_subject 
		FROM
			qna q JOIN qnaCate c
			ON q.qna_category = c.qnaCate_idx
		<if test="qna_idx != null and !qna_idx.equals('')">
		WHERE q.qna_idx = #{qna_idx}
		</if>
    </select>
    
    <update id="updateQna">
    	UPDATE qna
    	SET
    		qna_title = #{qna_title}
			, qna_content = #{qna_content}
			, qna_category = #{qna_category}
		WHERE qna_idx = #{qna_idx}
    </update>
    
    <delete id="deleteQna">
    	DELETE FROM qna
    	WHERE qna_idx = #{qna_idx}
    </delete>
    <!-- 자주 묻는 질문 끝 -->

    <!-- 자주 묻는 질문 카테고리 -->
    <insert id="insertQnaCategory">
		INSERT INTO qnaCate
		VALUES (
			null
			, #{qnaCate_subject}
		)
	</insert>

	<select id="selectQnaCategory" resultType="QnaCate">
          SELECT 
          	qnaCate_idx 
          	, qnaCate_subject
          FROM qnaCate;
    </select>
    
    <delete id="deleteQnaCategory">
    	DELETE FROM qnaCate
    	WHERE qnaCate_subject = #{qnaCate_subject}
    </delete>
    <!-- 자주 묻는 질문 카테고리 끝 -->
    
    
    <!-- 프로젝트 관련 된 내용 -->
    <!-- 프로젝트 전체 조회 -->
   	<select id="selectProjectList" resultType="map">
		SELECT
			p.project_code
			, max(p.title) AS title
			, max(p.subtitle) AS subtitle
			, max(p.category) AS category
			, max(p.creator) AS creator
			, max(p.img_main) AS img1
			, max(p.start_date) AS start_date
			, max(p.end_date) AS end_date
			, ifnull(format(sum(cost) , 0), 0) AS now_amount
			, ifnull(max(goal_amount), 0) AS goal_amount
			, ifnull(sum(cost) / max(goal_amount), 0) AS ratio
			, ifnull(TRUNCATE(sum(cost) / max(goal_amount) * 100, 0), 0) AS goal_rate
			, CASE count(p.project_code) WHEN 1 THEN 0 
										 ELSE count(p.project_code)
										 END AS donor
		FROM project p
		LEFT JOIN fund f
		ON p.project_code = f.project_code
		GROUP BY p.project_code
	</select>

    <!-- 진행전인 프로젝트 조회 -->
   	<select id="selectProjectBefore" resultType="map">
		SELECT
			project_code
			, title 
			, subtitle
			, category
			, creator
			, img_main AS img1
			, date(start_date) AS start_date
			, date(end_date) AS end_date
			, ifnull(goal_amount, 0) AS goal_amount
		FROM project p
		WHERE start_date > now() 
	</select>

	<!-- 진행중인 프로젝트 조회 -->
	<select id="selectProjectOngoing" resultType="map">
	SELECT *
	FROM 
		(SELECT
			p.project_code
			, max(p.title) AS title
			, max(p.subtitle) AS subtitle
			, max(p.category) AS category
			, max(p.creator) AS creator
			, max(p.img_main) AS img_main
			, date(max(p.start_date)) AS start_date
			, date(max(p.end_date)) AS end_date
			, ifnull(format(sum(cost) , 0), 0) AS now_amount
			, ifnull(max(goal_amount), 0) AS goal_amount
			, ifnull(sum(cost) / max(goal_amount), 0) AS ratio
			, ifnull(TRUNCATE(sum(cost) / max(goal_amount) * 100, 0), 0) AS goal_rate
			, CASE count(p.project_code) WHEN 1 THEN 0 
										 ELSE count(p.project_code)
										 END AS donor
		FROM project p
		LEFT JOIN fund f
		ON p.project_code = f.project_code
		<![CDATA[
		WHERE p.start_date <= now() AND p.end_date >= now()
		]]>
		GROUP BY p.project_code) A
	ORDER BY donor DESC
	</select>

   	<!-- 마감된 프로젝트 조회 -->
	<select id="selectProjectAfter" resultType="map">
	SELECT *
	FROM 
		(SELECT
			p.project_code
			, max(p.title) AS title
			, max(p.subtitle) AS subtitle
			, max(p.category) AS category
			, max(p.creator) AS creator
			, max(p.img_main) AS img_main
			, date(max(p.start_date)) AS start_date
			, date(max(p.end_date)) AS end_date
			, ifnull(format(sum(cost) , 0), 0) AS now_amount
			, ifnull(max(goal_amount), 0) AS goal_amount
			, ifnull(sum(cost) / max(goal_amount), 0) AS ratio
			, ifnull(TRUNCATE(sum(cost) / max(goal_amount) * 100, 0), 0) AS goal_rate
			, CASE count(p.project_code) WHEN 1 THEN 0 
										 ELSE count(p.project_code)
										 END AS donor
		FROM project p
		LEFT JOIN fund f
		ON p.project_code = f.project_code
		<![CDATA[
		WHERE p.end_date < now()
		]]>
		GROUP BY p.project_code) A
	ORDER BY donor DESC
	</select>
</mapper>